# Lista em Python 
# üöÄ O que √© uma lista em Python

# √â uma cole√ß√£o de valores, guardados em uma √∫nica vari√°vel, em vez de criar v√°rias.

# idades = [15, 20, 18, 22]


# idades[0] ‚Üí 15 (o primeiro elemento, √≠ndice come√ßa em 0)

# idades[1] ‚Üí 20

# idades[-1] ‚Üí 22 (√∫ltimo elemento)

# Como criar e preencher uma lista

# Lista vazia + append

# idades = []
# idades.append(15)
# idades.append(20)
# print(idades)  # [15, 20]


# Lista j√° preenchida

# notas = [7, 8.5, 9]

# Usando com for
# for idade in idades:
#     print(idade)   # percorre e mostra cada idade

# Fun√ß√µes √∫teis

# len(idades) ‚Üí quantidade de elementos

# sum(idades) ‚Üí soma de todos os elementos

# max(idades) ‚Üí maior valor

# min(idades) ‚Üí menor valor

# Mini-exemplo
# idades = []
# for i in range(3):
#     idade = int(input("Digite a idade: "))
#     idades.append(idade)

# print("Todas as idades:", idades)
# print("M√©dia:", sum(idades)/len(idades))
# print("Mais velho:", max(idades))
# print("Mais novo:", min(idades))


# Pe√ßa 5 n√∫meros ao usu√°rio, guarde-os em uma lista e depois mostre a lista inteira.
# lista = []
# for i in range(0,5):
#     n = int(input("Digite um numero: "))
#     lista.append(n)
# print(lista)

#Crie um programa que pe√ßa para o usu√°rio digitar 5 notas (valores de 0 a 10), 
#guarde todas elas em uma lista, e depois calcule e mostre a m√©dia dessas notas.
# lista = []
# for i in range(5):
#     nota = int(input("Digite a Nota: "))
#     lista.append(nota)
# media = sum(lista)/len(lista)
# print("A media das 5 notas √©: ", media)

# Fa√ßa um programa que pe√ßa 7 n√∫meros inteiros ao usu√°rio, guarde todos em uma lista, e no final:
# Mostre todos os n√∫meros digitados
# Mostre o maior valor da lista
# Mostre o menor valor da lista
# lista = []
# for i in range(7):
#     n = int(input("Digite um n√∫mero: "))
#     lista.append(n)
# print("Os n√∫meros digitaos foram: ",lista)
# print("O maior n√∫mero √©: ",max(lista))
# print("O menor n√∫mero √©: ",min(lista))
# print(f"A lista possui {len(lista)} n√∫meros")

# Pe√ßa para o usu√°rio digitar 4 nomes, guarde todos em uma lista.
# Depois, use um for in para mostrar cada nome com a frase:

# lista = []
# for i in range(4):
#     nome = str(input("Digite um nome: "))
#     lista.append(nome)
# for nome in lista:
#         print(f"Nome {len(lista)}",nome)

# Crie um programa que:
# Pe√ßa para o usu√°rio digitar 5 tarefas do dia (ex: "Estudar", "Arrumar o quarto", etc)
# Guarde todas as tarefas em uma lista
# Depois, mostre as tarefas numeradas, assim:

# lista = []
# for i in range(5):
#     tarefas = str(input(f"Digite a tarefa {i+1} do seu dia: "))
#     lista.append(tarefas)
# for i, tarefas in enumerate(lista,start=1):
#     print(i, tarefas)
        
# Crie um programa que:
# Pe√ßa para o usu√°rio digitar 3 frutas favoritas
# Guarde as frutas em uma lista
# Mostre a lista completa
# Depois, pe√ßa ao usu√°rio qual posi√ß√£o ele quer trocar (0, 1 ou 2)
# Pe√ßa a nova fruta e atualize a lista
# Mostre a lista atualizada no final

# lista = []
# for i in range(3):
#     frutas = str(input(f"Digite sua {i+1}¬™ fruta favorita: "))
#     lista.append(frutas)
# print("Suas frutas favorias favoritas s√£o: ", lista)

# alterar = int(input("Escolha uma fruta para alterar 1,2,3?: "))
# lista[alterar-1] = str(input("Nova fruta: "))
# print(lista)

# Crie um programa que:
# Pe√ßa ao usu√°rio para digitar 5 n√∫meros inteiros
# Guarde todos em uma lista
# Mostre:
# Todos os n√∫meros digitados
# A soma dos valores
# O maior valor
# O menor valor
# A posi√ß√£o (√≠ndice) do maior valor na lista

# lista = []
# print("Digite 5 n√∫meros inteiros: ")
# for i in range(5):
#     n = int(input(f"Digite N{i+1}: "))
#     lista.append(n)
# print("Os n√∫meros digitados foram: ",lista)
# print("A soma dos n√∫meros digitados √©: ",sum(lista))
# print("O maior n√∫mero √©: ",max(lista))
# maior = max(lista)
# print("O menor n√∫mero √©: ",min(lista))
# print("O √≠ndice do mair n√∫mero √©: ",lista.index(maior))

# Crie uma fun√ß√£o chamada mostrar_mensagem() que:
# Mostre a mensagem: "Bem-vindo ao mundo das fun√ß√µes!"

# def mostrar_mensagem():
#     print("Bem-vindo ao mundo das fun√ß√µes!")

# mostrar_mensagem()

#Pe√ßa ao usu√°rio dois n√∫meros inteiros: o in√≠cio e o fim.
#Depois, fa√ßa uma contagem do in√≠cio at√© o fim, 
# um n√∫mero por linha, usando for

# n1 = int(input("Digite o in√≠cio: "))
# n2 = int(input("Digite o fim: "))
# if n1 < n2:
#     for i in range(n1, n2+1):
#         print(i)
# else:
#     for y in range(n1, n2-1, -1):
#         print(y)

# n1 = int(input("Digite o in√≠cio: "))
# n2 = int(input("Digite o fim: "))
# i = n1
# if n1 < n2:
#    while i < n2:
#         print(i)
#         i +=1
# else:
#     while i > n2:
#         print(i)
#         i -= 1


# Crie um programa que:
#     Pe√ßa n√∫meros inteiros ao usu√°rio, um por vez
#     Pare quando o usu√°rio digitar 0
#     No final, mostre:
#     A soma apenas dos n√∫meros pares
#     A quantidade de pares digitados
    
# nP = int(input("Digite um n√∫mero (Digite 0, para parar): "))
# soma = 0
# i = 0

# while nP != 0:
#     if nP % 2 == 0:
#         soma += nP
#         i += 1
#     nP = int(input("Digite um n√∫mero (Digite 0, para parar): "))

# if nP == 0:
#     print("A soma dos pares √©: ",soma)    
#     print("A quantidade de pares digitados √©: ",i)    


# Pe√ßa n√∫meros ao usu√°rio at√© ele digitar 0
#     Ao final, mostre:
#     O maior n√∫mero digitado
#     O menor n√∫mero digitado
#     (Sem contar o 0!)

# numero = float(input("Digite um n√∫mero (Digite 0 para parar): "))
# lista_numeros = []

# while numero != 0:
#     lista_numeros.append(numero)
#     numero = float(input("Digite um n√∫mero (Digite 0 para parar): "))
    
# # Se o primeiro n√∫mero for 0, da erro.
# print("O maior n√∫mero digitado √©: ",max(lista_numeros))
# print("O menor n√∫mero digitado √©: ",min(lista_numeros))


# Pe√ßa n√∫meros inteiros ao usu√°rio at√© ele digitar 0
#     No final, mostre:
#     Quantos n√∫meros pares foram digitados
#     Quantos n√∫meros √≠mpares foram digitados

# # Entrada
# entrada = float(input("Digite um n√∫mero (Digita 0 para parar): "))
# listaDosNumerosDigitados = []
# contador_par = 0
# contador_impar = 0

# # Processamento 
# while entrada != 0:
#     if entrada % 2 == 0:
#         contador_par += 1
#         listaDosNumerosDigitados.append(entrada)
#         entrada = float(input("Digite um n√∫mero (Digita 0 para parar): "))
#     else:
#         contador_impar += 1
#         listaDosNumerosDigitados.append(entrada)
#         entrada = float(input("Digite um n√∫mero (Digita 0 para parar): "))

# # Saida
# print("A quantidade de pares √©: ", contador_par)
# print("A quantidade de impares √©: ", contador_impar)
    
# numero = int(input("Digite um n√∫mero: "))   
# lista = []

# while numero >= 0:
#     numero = int(input("Digite um n√∫mero: "))           
#     lista.append(numero)
#     if len(lista) == 2:
#         diferenca = lista[0] - lista[1]
#         print(f"A diferen√ßa entre {lista[0]} e {lista[1]} √© {diferenca}")
#         lista.clear()
    
        
# Voc√™ vai simular uma caminhada numa montanha. 
    # O programa come√ßa com um "altitude" igual a 0. 
    # A cada passo, o usu√°rio informa se subiu (S) ou desceu (D) 1 metro. 
        # O programa atualiza a altitude e exibe o valor atual.
            # O programa para quando o usu√°rio digitar P (de "Parar").
    # No final, o programa mostra:
        # A maior altitude atingida
        # A menor altitude atingida        

# altitude = 0
# max = 0
# min = 0

# print("Controle a Montanha Russa (D para descer/ S para subir e P para Parar)")
# passo = ""
# while passo != "P" and passo != "p":
#     passo = str(input("Subir/Descer/Parar: "))

#     if passo == "S" or passo == "s": 
#         altitude += 1
#         if altitude > max:
#             max = altitude
    
#     elif passo == "D" or passo == "d": 
#         altitude -= 1
#         if altitude < min:
#             min = altitude

#     elif passo == "P" or passo == "p":
#         break

#     else:
#         print("Movimento inv√°lido")
#         continue
# print("A maior altitude atingida",max)
# print("A menor altitude atingida",min)

##########################################
        
#Escreva um programa que pede um n√∫mero n e soma todos os n√∫meros de 1 at√© n.

# n = int(input("Digite um n√∫mero: "))
# soma = 0

# for i in range(1, n+1):
#     print(i, end=" + ")
#     soma += i
# print("=",soma)

# Pe√ßa um n√∫mero n, e mostre todos os n√∫meros pares de 0 at√© n.

# n = int(input("Digite um n√∫mero: "))

# for i in range(0, n, 2):
#     print(i, end=" ")

#O programa pede n√∫meros at√© o usu√°rio digitar 0.
#Quando ele digita 0, o programa mostra quantos n√∫meros foram digitados (sem contar o zero).

# n = int(input("Digite um n√∫mero: "))
# contador = 0

# while n != 0:
#     n = int(input("Digite um n√∫mero: "))
#     contador +=1
# print("Foram digitados:",contador,"n√∫meros")

# O programa pede n√∫meros ao usu√°rio at√© ele digitar -1.
#No final, o programa mostra o maior e o menor n√∫mero que o usu√°rio digitou.

# n = int(input("Digite um n√∫mero (Para parar, digite -1): "))

# if n == -1:
#     print("Nenhum n√∫mero v√°lido foi digitado.")
# else:
#     maior = n
#     menor = n

#     while True:
#         n = int(input("Digite um n√∫mero (Para parar, digite -1): "))
#         if n == -1:
#             break
#         if n > maior:
#             maior = n
#         if n < menor:
#             menor = n

#     print("O maior n√∫mero digitado foi:", maior)
#     print("O menor n√∫mero digitado foi:", menor)


# contador = 0
# soma = 0
# ultimo = 0

# while True:
#     numero = int(input("Digite um n√∫mero: "))
#     contador += 1
#     soma += numero
#     media = soma / contador
#     ultimo = numero
#     if media > 20:
#         print("√öltimo n√∫mero digitado: ",numero)
#         print("Media: ",media)
#         break
#     else:
#         ultimo = numero



